;; -*-scheme-*-
;;

(define aWCS-server1 '#{
			"port" => #{
				    "proto" => "tcp"
				    "port" => 42420
				    }
			       })

(define foo-server1 '#{
		       "bar" => 100
		       "reply" => "Booo"
			       "messages" =>
			       ("Welcome to the foo test server"
				"I will echo your lines")
			       })

;;
;; This is an example serveez configuration file. Don't worry it looks more
;; complicated than it actually is.
;; You usually just set variables which works like this:
;;
;; (set! variablename value)
;;
;; Examples:
;; (set! some-string "I am a string value")
;; (set! some-int 42)
;; (set! some-bool #f)
;;
;; Look for those lines and change the values to suit your needs
;;

;; === Convenience functions - Scheme for dummies, thanks to 'mgrabmue
(define (println . args) (for-each display args)(newline))
(define (printsln spacer . args)
  (for-each (lambda(x)(display x)(display spacer)) args)(newline))

;; === Greet the user
(printsln " "
	  "** Welcome to serveez"
	  serveez-version
	  (if have-debug
	      "(debugging enabled)"
	      ""
	   ))

(if have-win32
    (println "* This is the Win32 port, good luck :-P"))

;;
;; === general options for serveez ========================
;;

;; TCP port serveez is listening on
(set! serveez-port 42420)

;; log level 0..3 (lesser values means fewer log messages
;; use 0 for production environment
(set! serveez-verbosity 3)

;; maximum accepted remote connections
(set! serveez-sockets 200)

;; password for the control protocol
(set! serveez-pass "secret")

;; === load http server configuration ==========================
(if have-http
    (begin
      ;;
      ;; HTTP Server settings
      ;;

      ;; HTML file to show if there is a directory given only
      (set! http-indexfile "index.html")
      
      ;; document root (physical path)
      (set! http-docs "../show")
      
      ;; CGI script root (physical path)
      (set! http-cgidir "./cgibin")
      
      ;; CGI URL detection (virtual path)
      (set! http-cgiurl "/cgi-bin")
      
      ;; maximum file size for cached files
      (set! http-cachesize (* 200 1024))

      ;; timeout in seconds for Keep-Alive connections
      (set! http-timeout 15)
      
      ;; maximum files transfered via a Keep-Alive connection
      (set! http-keepalive 10)

      ))

;; === laad irc server configuration ===========================
(if have-irc
    (begin
      ;;
      ;; IRC Settings
      ;;

      ;; location of the "message of the day" file
      (set! irc-MOTD-file "../doc/irc-MOTD.txt")

      ;; timestamp delta value in seconds
      (set! irc-tsdelta (* 3600 0))

      ;; administrative information
      (set! irc-admininfo "place some administrative info here")

      ;; email address(es) of the IRC server maintainer
      (set! irc-email "mgrabmue@cs.tu-berlin.de, raimi@lkcc.org, ela@lkcc.org")

      ;; location of the IRC server
      (set! irc-location1 "Berlin, Germany")

      ;; location (department, university) of the IRC server
      (set! irc-location2 "TU Berlin")

      ;; M-lines
      (set! irc-M-line "M:141.45.240.162:127.0.0.1:this is for info:42420")

      ;; C-lines
      (set! irc-C-lines
	    '(
	      "C:cho.kgw.TU-Berlin.DE:textsure0:cho.kgw.TU-Berlin.DE:6667:2"
	      ))

      ))

;;
;; If you want to include more settings from other files use this
;;
;;(primitive-load "otherfile.cfg")

;;
;; wish the user bye-bye, telling runtime settings
;;  (some of which may be overridden from command line, which we don't know
;;   here)
;;
(printsln " "
	  "* Starting on port"
	  serveez-port
	  "accepting max."
	  serveez-sockets
	  "connections")
(if have-http
    (printsln " "
	      "* HTTP serving documents from"
	      http-docs
	      "\n"
	      " executing CGIs in"
	      http-cgidir
	      "accessible through"
	      http-cgiurl))

(if have-irc
    (printsln " "
	      "* IRC server loading Message of the Day from"
	      irc-MOTD-file))

(if have-awcs
    (printsln " "
	      "* TextSure lowlevel server running, floodprotection"
	      (if have-floodprotection "available" "unavailabe")))

