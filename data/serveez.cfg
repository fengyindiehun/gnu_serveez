;; -*-scheme-*-
;;
;; This is an example serveez configuration file. Don't worry it, looks 
;; more complicated than it actually is.
;; You usually just set variables which works like this:
;;
;; (set! variablename value)
;;
;; Examples:
;; (set! some-string "I am a string value")
;; (set! some-int 42)
;; (set! some-bool #f)
;;
;; Look for those lines and change the values to suit your needs.
;;

;; The tunnel server 1 and 2 create a tunnel between the local telnet
;; daemon and a tcp connection.
(define tunnel-server1 '#{
			  "source" => #{
					"proto" => "tcp"
					"port"  => 42425
					}
			  "target" => #{
					"proto" => "icmp"
					"local-ip" => "127.0.0.1"
					}
			  })

(define tunnel-server2 '#{
			  "source" => #{
					"proto" => "icmp"
					}
			  "target" => #{
					"proto" => "tcp"
					"port"  => 23
					"local-ip" => "127.0.0.1"
					}
			  })

;; Tunnel server 3 and 4 form an UDP tunnel on arbitrary ports.
(define tunnel-server3 '#{
			  "source" => #{
					"proto" => "tcp"
					"port"  => 42426
					}
			  "target" => #{
					"proto" => "udp"
					"port"  => 12345
					"local-ip" => "127.0.0.1"
					}
			  })

(define tunnel-server4 '#{
			  "source" => #{
					"proto" => "udp"
					"port"  => 12345
					}
			  "target" => #{
					"proto" => "tcp"
					"port"  => 80
					"local-ip" => "127.0.0.1"
					}
			  })

;; Tunnel 5 forms a PIPE tunnel to the aWCS server.
(define tunnel-server5 '#{
			  "source" => #{
					"proto" => "tcp"
					"port"  => 42428 
					}
			  "target" => #{
					"proto"   => "pipe"
					"inpipe"  => ".aWCSsend"
					"outpipe" => ".aWCSrecv"
					}
			  })

;; Gnutella spider instance.
(define nut-server1 '#{
		       "hosts" => ("127.0.0.1:6346"
		                   "146.145.85.34:6346"
				   "127.0.0.1:5634")
		       "ttl"     => 7
		       "max-ttl" => 7
		       "download-path" => "./share"
		       "share-path"    => "./share"
		       "search" => ("Puppe3000" "Meret Becker")
		       "search-limit" => 30
		       "max-downloads" => 4
		       "max-uploads" => 4
		       "connection-speed" => 64
		       "min-speed" => 0
		       "file-extensions" => ("mp3" "mp2" "mpeg")
		       "connections" => 4
		       "net-url" => "gnutella-net"
		      })

;; Simple Network Time Protocol server.
(define sntp-server1 '#{
			"netport" => #{
				       "proto" => "udp"
				       "port"  => 54321
				      }
		       })

;; Chat server.
(define aWCS-server1 '#{
			"netport" => #{
				       "proto" => "tcp"
				       "port"  => 42420
				      }
		       })

;; Example TCP protocol server (for educational purposes).
(define foo-server1 '#{
		       "bar"      => 100
		       "reply"    => "Booo"
		       "messages" =>
			             ("Welcome to the foo test server !"
				      "I will echo your lines.")
		      })

;; Fast and reliably Web Server.
(define http-server1 '#{

	      ;; network configuration
	      "netport" => #{
			     "proto"    => "tcp"
		             "port"     => 42422
			     "local-ip" => "*"
			     }

	      ;; standard properties
	      "admin"        => "stefan@lkcc.org"
	      "host"         => "bono.reversers.net"
	      "logfile"      => "http-access.log"
	      "logformat"    => "%h %i %u [%t] \"%R\" %c %l"
	      "indexfile"    => "index.html"
	      "docs"         => "/"
	      "userdir"      => "public_html"
	      "type-file"    => "/etc/mime.types"
	      "default-type" => "text/plain"
	      "nslookup"     => 1
	      "ident"        => 1

	      ;; cgi interface
	      "cgi-url"         => "/cgi-bin"
	      "cgi-dir"         => "../../textsure/cserver/cgibin"
	      "cgi-application" => #{
				     "pl"  => "perl"
				     "scm" => "sizzle -s"
				     }
		       })

;; Control protocol server for remote control.
(define control-server1 '#{
			   "netport" => #{
					  "proto"    => "tcp"
				          "port"     => 42420
					  "local-ip" => "*"
					 }
		          })

;; Internet Relay Chat server.
(define irc-server1 `#{

      ;; network port configuration
      "port" => #{
		  "proto"    => "tcp"
		  "port"     => 42424
		  "local-ip" => "*"
		 }

      ;; location of the "message of the day" file
      "MOTD-file " => "../data/irc-MOTD.txt"

      ;; timestamp delta value in seconds
      "tsdelta" => ,(* 3600 0)

      ;; administrative information
      "admininfo" => "World's best IRC server"

      ;; M-line: location, department (university), email address(es)
      "A-line" => "A:TU Berlin:Berlin, Germany:raimi@lkcc.org"

      ;; M-line
      "M-line" => "M:141.45.240.162:127.0.0.1:this is for info:42424"

      ;; C-lines
      "C-lines" =>
	    (
	     "C:cho.kgw.TU-Berlin.DE:textsure0:cho.kgw.TU-Berlin.DE:6667:2"
	     "C:bono.reversers.net:oddity:bono.reversers.net:6667:2"
	    )

      ;; C-lines
      "I-lines" =>
	    (
	     "I:NOMATCH::*@*::100"
	    )

      ;; O-lines
      "O-lines" =>
	    (
	     "O:ela@bono.reversers.net:serveez:ela::4"
	    )

	              })

;; === Convenience functions - Scheme for beginners, thanks to 'mgrabmue.
(define (println . args) (for-each display args)(newline))
(define (printsln spacer . args)
  (for-each (lambda(x)(display x)(display spacer)) args)(newline))

;; === Greet the user
(printsln " "
	  "** Welcome to Serveez" serveez-version 
	  "using Sizzle" %sizzle-version%
	  (if have-debug
	      "(debugging enabled)"
	      ""
	   ))

(if have-win32
    (println "* This is the Win32 port, good luck."))

;;
;; === general options for serveez ========================
;;

;; log level 0..4 (lesser values mean fewer logging messages)
;; use 0 for production environment
(set! serveez-verbosity 4)

;; maximum accepted remote connections
(set! serveez-sockets 100)

;; password for the control protocol (plain/crypted)
(set! serveez-pass "secret")
;;(set! serveez-pass "xmA9CY34MxkGg")

;;
;; If you want to include more settings from other files use this.
;;
;;(primitive-load "otherfile.cfg")
