HACKING libserveez API					-*- org -*-

* already done							    :ARCHIVE:
*** use explicit type for cast in ‘svz_hash_foreach_value’
*** add func ‘svz_library_features’
*** move most #include <foo.h> into defines.h and *.c ([[elisp:(grep%20"find%20..%20-name%20'*.h'%20-print0%20|%20xargs%20-0%20grep%20-nH%20-e%20'^#.*include.*<.*>'")][grep]]).
*** move most #if...#endif into defines.h and *.c ([[elisp:(grep%20"find%20.%20-name%20'*.h'%20-print0%20|%20xargs%20-0%20grep%20-nH%20-e%20'^#%20*if'%20|%20sed%20'/_H__$/d'")][grep]]).
*** prune ancillary elements
    | x | ∀ SVZ_U?INT..            | suboptimal | avoid                      |
    | x | svz_vasprintf            | unused     | internalize                |
    | x | svz_asprintf             | GNU        | avoid                      |
    | x | svz_snprintf             | 2011!      | use ‘snprintf’ directly    |
    | x | svz_strcasecmp           | danger     | use ‘strncasecmp’ instead  |
    | x | svz_strncasecmp          | 2011!      | use ‘strncasecmp’ directly |
    | x | svz_build                | cruft      | avoid                      |
    | x | svz_have_Win32           | pure lose  | avoid                      |
    | x | svz_have_debug           | var        | obsoleted by "features"    |
    | x | svz_have_floodprotect    | var        | obsoleted by "features"    |
    | x | svz_os_version           | woe        | internalize                |
    | x | svz_syserror             | woe        | internalize                |
    | x | svz_mutex_*              | suboptimal | internalize                |
    | x | svz_codec_init           | impl       | internalize                |
    | x | svz_codec_finalize       | impl       | internalize                |
    | x | svz_dynload_init         | impl       | interanlize                |
    | x | svz_dynload_finalize     | impl       | internalize                |
    | x | svz_strsignal_init       | impl       | internalize                |
    | x | svz_strsignal_destroy    | impl       | internalize                |
    | x | svz_sock_table_create    | impl       | internalize                |
    | x | svz_sock_table_destroy   | impl       | internalize                |
    | x | svz_signal_up            | impl       | internalize                |
    | x | svz_signal_dn            | impl       | internalize                |
    | x | svz_init_config          | impl       | internalize                |
    | x | svz_interface_collect    | impl       | internalize                |
    | x | svz_interface_free       | impl       | internalize                |
    | x | svz_net_startup          | impl       | internalize                |
    | x | svz_net_cleanup          | impl       | internalize                |
    | x | svz_pipe_startup         | impl       | internalize                |
    | x | svz_pipe_cleanup         | impl       | internalize                |
    | x | svz_config_type_init     | impl       | internalize                |
    | x | svz_config_type_finalize | impl       | internalize                |
*** use "hidden" attribute (gcc only)
*** internalize elements unused outside of libserveez
* refine, refine, refine!
*** noinst
    header is not installed (not in [[file:../libserveez.h][libserveez.h]])
    → ∅ (also → automatic ‘x’ for other columns)
*** woe
    exposed (not ‘SBO’, ‘svzint’) #ifdef __MINGW32__ and/or other woe
    → remove if possible ("done" means unavoidable)
*** generalized ip address
    takes ‘unsigned long’ (uint32_t) for network byte-order IPv4 address
    → replace ‘unsigned long’ with (pointer to) generalized ip address
*** macros
    → (for flexibility?) convert selected macros to functions ([[elisp:(grep%20"grep%20-nH%20-e%20'^#%20*define%20.*(.*)'%20*.h%20*/*.h")][grep]])
*** internalize
    var → move behind functional interface ([[elisp:(grep%20"grep%20-nH%20-e%20Variable:%20%20../../doc/serveez.info")][doc-grep]])
    #define → move into implementation or mark ‘svzint’
*** work in progress ([[elisp:(let%20((dired-listing-switches%20"-alhFGrS"))%20(dired%20"*.h"))][dired by size]])
    (for columns: ? ≡ need-info, o ≡ todo, x ≡ done)
    |----------------------+---+---+---+---+----------------+------|
    | file                 | [[noinst][n]] | [[woe][w]] | [[generalized ip address][g]] | [[macros][m]] | [[internalize]]    | more |
    |----------------------+---+---+---+---+----------------+------|
    | [[file:server-socket.h][server-socket]]        | x |   |   |   |                |      |
    | [[file:raw-socket.h][raw-socket]]           | x |   |   |   |                |      |
    | [[file:dynload.h][dynload]]              |   |   |   |   |                | [[more-dynload][more]] |
    | [[file:mutex.h][mutex]]                | x | x |   |   |                |      |
    | [[file:tcp-socket.h][tcp-socket]]           |   |   | o |   |                |      |
    | [[file:windoze.h][windoze]]              |   | x |   |   |                |      |
    | [[file:boot.h][boot]]                 |   |   |   |   | svz_config     |      |
    | [[file:udp-socket.h][udp-socket]]           |   |   | o |   |                |      |
    | [[file:interface.h][interface]]            |   |   | o |   |                | [[more-interface][more]] |
    | [[file:binding.h][binding]]              |   |   |   |   |                | [[more-binding][more]] |
    | [[file:pipe-socket.h][pipe-socket]]          |   |   |   |   |                |      |
    | [[file:passthrough.h][passthrough]]          |   |   |   |   |                |      |
    | [[file:defines.h][defines]]              |   |   |   |   |                |      |
    | [[file:core.h][core]]                 |   |   | o |   |                | [[more-core][more]] |
    | [[file:alloc.h][alloc]]                |   |   |   |   |                |      |
    | [[file:iphlpapi.h][iphlpapi]]             | x | x |   |   |                |      |
    | [[file:vector.h][vector]]               |   |   |   |   |                |      |
    | [[file:array.h][array]]                |   |   |   |   |                |      |
    | [[file:server-core.h][server-core]]          |   |   |   |   | svz_child_died | [[more-server-core][more]] |
    | [[file:util.h][util]]                 |   | x |   |   |                |      |
    | [[file:hash.h][hash]]                 |   |   |   |   |                |      |
    | [[file:icmp-socket.h][icmp-socket]]          |   |   | o |   |                |      |
    | [[file:ipdata.h][ipdata]]               | x |   | o |   |                |      |
    | [[file:server.h][server]]               |   |   |   |   |                | [[more-server][more]] |
    | [[file:portcfg.h][portcfg]]              |   |   |   | x |                | [[more-portcfg][more]] |
    | [[file:cfg.h][cfg]]                  |   |   |   |   |                | [[more-cfg][more]] |
    | [[file:socket.h][socket]]               |   | x | o | x |                |      |
    | [[file:codec/bzip2.h][codec/bzip2]]          | x |   |   |   |                |      |
    | [[file:codec/codec.h][codec/codec]]          |   |   |   |   |                |      |
    | [[file:codec/gzlib.h][codec/gzlib]]          | x |   |   |   |                |      |
    | [[file:coserver/coserver.h][coserver/coserver]]    |   | x | o | x |                | [[more-coserver/coserver][more]] |
    | [[file:coserver/dns.h][coserver/dns]]         | x |   |   |   |                |      |
    | [[file:coserver/ident.h][coserver/ident]]       | x |   |   |   |                |      |
    | [[file:coserver/reverse-dns.h][coserver/reverse-dns]] | x |   |   |   |                |      |
    | [[file:coserver/xerror.h][coserver/xerror]]      | x |   |   |   |                |      |
    |----------------------+---+---+---+---+----------------+------|
*** add func: <<svz_prettyprint>> (FILE *to, enum WHAT)
    where WHAT ∈ {interface, codec, bindings, servertype, prototype, ...}
*** more-dynload
***** replace svz_dynload_path_{set,get}
      with ‘svz_load_path (char const *DIR)’;
      if DIR is NULL, clear the path; else push DIR
*** more-interface
***** fold ‘svz_interface_list’ into [[svz_prettyprint]]
***** combine svz_interface_{get,search}
      into ‘svz_find_interface (enum BY, void *data)’ with BY ∈ {name, addr}
***** eliminate ‘svz_interface_check’
      moving specification of check signal (currently SIGHUP) to ‘svz_boot’;
      add "never check" mode
*** more-binding
***** specialize ‘svz_server_portcfgs’
      into ‘svz_server_first_configured_address’ for clients [[file:~/build/GNU/serveez/src/http-server/http-proto.c::svz_server_portcfgs][http]], [[file:~/build/GNU/serveez/src/irc-server/irc-proto.c::svz_server_portcfgs][irc]]
***** fold ‘svz_server_bindings’ into [[svz_prettyprint]]
***** replace ‘svz_server_listeners’ (+ ‘svz_array_destroy’)
      with new func ‘svz_server_listener_foreach’
***** abstract more for passthrough
      (unique client of ‘svz_server_single_listener’)
***** replace ‘svz_sock_servers’ (+ ‘svz_array_destroy’)
      with new func ‘svz_sock_servers_foreach’
*** more-core
***** replace ‘svz_inet_ntoa’ and ‘svz_inet_aton’
      with something that can handle [[generalized ip address]]
      (this is in addition to ‘svz_socket_connect’)
*** more-server-core
***** (maybe) combine set/get funcs
*** more-server
***** combine ‘svz_server_init_all’, ‘svz_server_finalize_all’,
      ‘svz_servertype_finalize’
***** fold ‘svz_servertype_print’ into [[svz_prettyprint]]
*** more-portcfg
***** (maybe) internalize convenience (struct access) #define:s
***** convert macro ‘svz_portcfg_addr’ to function
***** likewise ‘svz_portcfg_ipaddr’
***** likewise ‘svz_portcfg_device’
***** likewise ‘svz_portcfg_port’
***** fold ‘svz_portcfg_print’ into [[svz_prettyprint]]
*** more-cfg
***** fold ‘svz_config_prototype_print’ into [[svz_prettyprint]]
***** change ‘svz_config_intarray_create’ et al
      to take a first arg ‘size_t count’
*** more-coserver/coserver
***** combine svz_coserver_{init,finalize}
***** raise abstraction
******* move ctrl-server funcs into coserver.c
******* zonk ‘svz_foreach_coserver’, ‘svz_coserver_destroy’
***** make ‘svz_coserver_send_request’ take ‘svz_coserver_t *’, not TYPE
* generate libserveez.h
*** topo sort headers
*** concatenate, re-grouping by
***** typedef
***** struct
***** #define
***** func decl
***** macro
*** don't install individual headers
* etc
#+STARTUP: odd


Copyright (C) 2011 Thien-Thi Nguyen

Copying and distribution of this file, with or without modification,
are permitted provided the copyright notice and this notice are preserved.
